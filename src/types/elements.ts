export enum ElementType {
  Fire = '火 🔥',
  Water = '水 💧',
  Ice = '冰 ❄️',
  Electric = '电 ⚡',
  Nature = '自然 🌿',
  Light = '光 ✨',
  Dark = '暗 🌑'
}

export interface Reaction {
  name: string;
  effect: string;
  element1: ElementType;
  element2: ElementType;
  modifier?: number;
  retainElement?: boolean;
  statModifier?: {
    stat: string;
    value: number;
    stackable: boolean;
  };
}

export interface ElementMatrix {
  [key: string]: {
    [key: string]: string;
  };
}

export const elementMatrix: ElementMatrix = {
  '火 🔥': {
    '水 💧': '蒸发 💨',
    '冰 ❄️': '融化 💫',
    '电 ⚡': '爆燃 💥',
    '自然 🌿': '点燃 🔥',
    '光 ✨': '神圣 🌟',
    '暗 🌑': '枯竭 🏜️'
  },
  '水 💧': {
    '冰 ❄️': '霜冻 ❄️',
    '电 ⚡': '传导 ⚡',
    '自然 🌿': '缠绕 🌱',
    '光 ✨': '生长 🌱',
    '暗 🌑': '脱水 💨'
  },
  '冰 ❄️': {
    '电 ⚡': '电火花 ⚡',
    '自然 🌿': '寒冷 ❄️',
    '光 ✨': '辉光 ✨',
    '暗 🌑': '眩晕 💫'
  },
  '电 ⚡': {
    '自然 🌿': '过度生长 🌳',
    '光 ✨': '反射 🔄',
    '暗 🌑': '压迫 ⚓'
  },
  '自然 🌿': {
    '光 ✨': '绽放 🌸',
    '暗 🌑': '枯萎 🥀'
  },
  '光 ✨': {
    '暗 🌑': '中和 ☯️'
  }
};

export const reactionEffects: { [key: string]: string } = {
  '蒸发 💨': '造成额外 0.3x 触发单位的生命值 (HP) 伤害',
  '融化 💫': '造成额外 2x 触发单位的防御 (Defense) 伤害',
  '霜冻 ❄️': '目标跳过一回合，保留冰元素',
  '爆燃 💥': '造成额外 1x 触发单位的攻击 (Attack) 伤害',
  '传导 ⚡': '造成额外 1x 触发单位的速度 (Speed) 伤害，保留电元素',
  '电火花 ⚡': '目标当前防御 -30% (可叠加，向下取整)，保留电元素',
  '点燃 🔥': '造成额外 0.5x 触发单位的攻击 (Attack) 伤害，保留火元素',
  '缠绕 🌱': '目标跳过1回合，保留自然元素',
  '寒冷 ❄️': '目标跳过1回合，技能策略 (SkillStrategy) 重置为 0',
  '过度生长 🌳': '造成额外 2x 触发单位的智力 (Intelligence) 伤害',
  '神圣 🌟': '目标当前攻击 +30% (可叠加，向下取整)',
  '生长 🌱': '目标当前生命值 +25% (可叠加，向下取整)',
  '辉光 ✨': '目标当前防御 +30% (可叠加，向下取整)',
  '反射 🔄': '目标当前速度 +30% (可叠加，向下取整)',
  '绽放 🌸': '目标当前智力 +30% (可叠加，向下取整)',
  '枯竭 🏜️': '目标当前攻击 -30% (可叠加，向下取整)',
  '脱水 💨': '目标当前生命值 -25% (可叠加，向下取整)，上限 9999',
  '眩晕 💫': '目标当前防御 -50% (可叠加，向下取整)',
  '压迫 ⚓': '目标当前速度 -30% (可叠加，向下取整)',
  '枯萎 🥀': '目标当前智力 -30% (可叠加，向下取整)',
  '中和 ☯️': '移除所有元素'
}; 